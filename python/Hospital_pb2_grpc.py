# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Hospital_pb2 as Hospital__pb2


class PatientSericeStub(object):
  """SERVICES
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.findPatient = channel.unary_stream(
        '/hospital.PatientSerice/findPatient',
        request_serializer=Hospital__pb2.PatientPESEL.SerializeToString,
        response_deserializer=Hospital__pb2.Examinations.FromString,
        )


class PatientSericeServicer(object):
  """SERVICES
  """

  def findPatient(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PatientSericeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'findPatient': grpc.unary_stream_rpc_method_handler(
          servicer.findPatient,
          request_deserializer=Hospital__pb2.PatientPESEL.FromString,
          response_serializer=Hospital__pb2.Examinations.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hospital.PatientSerice', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class DoctorServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.findPatients = channel.unary_stream(
        '/hospital.DoctorService/findPatients',
        request_serializer=Hospital__pb2.Empty.SerializeToString,
        response_deserializer=Hospital__pb2.Patients.FromString,
        )
    self.findExaminations = channel.unary_stream(
        '/hospital.DoctorService/findExaminations',
        request_serializer=Hospital__pb2.PatientPESEL.SerializeToString,
        response_deserializer=Hospital__pb2.Examinations.FromString,
        )
    self.findExaminationsAll = channel.unary_stream(
        '/hospital.DoctorService/findExaminationsAll',
        request_serializer=Hospital__pb2.Empty.SerializeToString,
        response_deserializer=Hospital__pb2.Examinations.FromString,
        )
    self.createPatient = channel.unary_unary(
        '/hospital.DoctorService/createPatient',
        request_serializer=Hospital__pb2.Patient.SerializeToString,
        response_deserializer=Hospital__pb2.SimpleResponse.FromString,
        )
    self.orderExamination = channel.unary_unary(
        '/hospital.DoctorService/orderExamination',
        request_serializer=Hospital__pb2.Examination.SerializeToString,
        response_deserializer=Hospital__pb2.SimpleResponse.FromString,
        )


class DoctorServiceServicer(object):

  def findPatients(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findExaminations(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findExaminationsAll(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createPatient(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def orderExamination(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DoctorServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'findPatients': grpc.unary_stream_rpc_method_handler(
          servicer.findPatients,
          request_deserializer=Hospital__pb2.Empty.FromString,
          response_serializer=Hospital__pb2.Patients.SerializeToString,
      ),
      'findExaminations': grpc.unary_stream_rpc_method_handler(
          servicer.findExaminations,
          request_deserializer=Hospital__pb2.PatientPESEL.FromString,
          response_serializer=Hospital__pb2.Examinations.SerializeToString,
      ),
      'findExaminationsAll': grpc.unary_stream_rpc_method_handler(
          servicer.findExaminationsAll,
          request_deserializer=Hospital__pb2.Empty.FromString,
          response_serializer=Hospital__pb2.Examinations.SerializeToString,
      ),
      'createPatient': grpc.unary_unary_rpc_method_handler(
          servicer.createPatient,
          request_deserializer=Hospital__pb2.Patient.FromString,
          response_serializer=Hospital__pb2.SimpleResponse.SerializeToString,
      ),
      'orderExamination': grpc.unary_unary_rpc_method_handler(
          servicer.orderExamination,
          request_deserializer=Hospital__pb2.Examination.FromString,
          response_serializer=Hospital__pb2.SimpleResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hospital.DoctorService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class LabServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddExamination = channel.unary_unary(
        '/hospital.LabService/AddExamination',
        request_serializer=Hospital__pb2.Empty.SerializeToString,
        response_deserializer=Hospital__pb2.SimpleResponse.FromString,
        )


class LabServiceServicer(object):

  def AddExamination(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LabServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddExamination': grpc.unary_unary_rpc_method_handler(
          servicer.AddExamination,
          request_deserializer=Hospital__pb2.Empty.FromString,
          response_serializer=Hospital__pb2.SimpleResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hospital.LabService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
